buildscript {
    repositories {
        mavenCentral()
    }

    ext {
        springBootVersion = "3.4.4"
        dependencyManagementVersion = "1.1.7"
        epagesRestDocsVersion = "0.19.4"
    }
}

plugins {
    id "java"
    id "org.springframework.boot" version "${springBootVersion}"
    id "io.spring.dependency-management" version "${dependencyManagementVersion}"
    id "com.epages.restdocs-api-spec" version "${epagesRestDocsVersion}"
}

group = "com.judizi"
version = "0.0.1"

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // spring
    implementation ("org.springframework.boot:spring-boot-starter-web") {
        exclude module: "spring-boot-starter-tomcat"
    }
    implementation "org.springframework.boot:spring-boot-starter-jetty"
    implementation "org.springframework.boot:spring-boot-starter-validation"
    implementation "org.springframework.boot:spring-boot-starter-actuator"

    // dev
    developmentOnly "org.springframework.boot:spring-boot-devtools"

    // utils
    implementation "org.apache.commons:commons-lang3"
    implementation "commons-io:commons-io:2.15.0"

    // jackson
    implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310"

    //lombok
    compileOnly "org.projectlombok:lombok"
    annotationProcessor "org.projectlombok:lombok"
    testCompileOnly "org.projectlombok:lombok"
    testAnnotationProcessor "org.projectlombok:lombok"

    // springdoc
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.6"
    testImplementation "org.springframework.restdocs:spring-restdocs-mockmvc"
    implementation "com.epages:restdocs-api-spec:${epagesRestDocsVersion}"
    testImplementation "com.epages:restdocs-api-spec-mockmvc:${epagesRestDocsVersion}"

    // testing
    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.junit.jupiter:junit-jupiter"
    testRuntimeOnly "org.junit.platform:junit-platform-launcher"
}

tasks.named("test") {
    useJUnitPlatform()
}

/* Spring RestDocs */
ext {
    openapiDir = file("build/api-spec")
    snippetsDir = file("build/generated-snippets")
}

openapi3 {
    setServer("http://localhost:8080")
    title = "%s API".formatted(project.name)
    version = project.version
    format = "yaml"
    outputDirectory = openapiDir
    outputFileNamePrefix = "%s-%s".formatted(project.name, project.version)
}

test {
    outputs.dir snippetsDir
    finalizedBy "openapi3"
}

build {
}

bootRun {
    String springProfilesActive = System.properties["spring.profiles.active"]
    systemProperty "spring.profiles.active", springProfilesActive
}
